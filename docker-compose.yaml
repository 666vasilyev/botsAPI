version: "3.7"
services:
  app:
    container_name: "app1"
    build:
      context: ./back/
      dockerfile: Dockerfile
    ports:
      - ${API_PORT}:${API_PORT}
    command: uvicorn main:app --host 0.0.0.0 --port ${API_PORT} --reload
    env_file:
      .env

  db:
    image: postgres:15
    ports:
      - 5433:${POSTGRES_PORT}
    env_file:
      .env

  redis:
    image: redis:7
    container_name: "redis"
    env_file:
      .env

  alembic:
    container_name: "alembic"
    build:
      context: ./back/
      dockerfile: Dockerfile
    environment:
      - ALEMBIC_INI=alembic.ini
    depends_on:
      - db
    command: alembic upgrade head
    env_file:
      .env

  celery:
    container_name: "celery"
    build:
      context: ./back/
      dockerfile: Dockerfile
    image: app1
    depends_on:
      - redis
    command: celery -A src.core.celery.celery_tasks worker --loglevel=${LOG_LEVEL} --purge
    env_file:
      .env

  celery_beat:
    container_name: "celery_beat"
    build:
      context: ./back/
      dockerfile: Dockerfile
    image: app1
    depends_on:
      - redis
    command: celery -A src.core.celery.celery_tasks beat --loglevel=${LOG_LEVEL}
    env_file:
      .env
  frontend:
    image: front
    build: 
      context: ./front/
      dockerfile: Dockerfile
    volumes:
      - './services/frontend:/app'
      - '/app/node_modules'
    ports:
      - 5050:80
